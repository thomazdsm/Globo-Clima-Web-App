@model GloboClima.WebApp.Models.FavoriteCitiesPageViewModel
@{
    ViewData["Title"] = "Cidades Favoritas";
}

<!-- Header -->
<div class="row mb-4">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center flex-wrap gap-3">
            <div>
                <h1 class="mb-2">
                    <span style="margin-right: 0.5rem; font-size: 2.5rem;">⭐</span>Cidades Favoritas
                </h1>
                <p class="lead mb-0">Gerencie suas cidades favoritas e acompanhe o clima em tempo real.</p>
            </div>
            <div>
                <a asp-controller="Dashboard" asp-action="Index" class="btn btn-outline-secondary">
                    <span style="margin-right: 0.5rem;">🏠</span>Dashboard
                </a>
            </div>
        </div>
    </div>
</div>

<!-- Formulário para adicionar nova cidade favorita -->
<div class="row mb-4">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title">
                    <span style="margin-right: 0.5rem;">➕</span>Adicionar Nova Cidade
                </h5>
            </div>
            <div class="card-body">
                <form asp-action="AddFavorite" method="post" id="addFavoriteForm">
                    @Html.AntiForgeryToken()
                    <div class="row g-3">
                        <div class="col-md-4">
                            <label for="CountryCode" class="form-label">
                                <span style="margin-right: 0.25rem;">🌍</span>Código do País
                            </label>
                            <input name="CountryCode"
                                   id="CountryCode"
                                   class="form-control"
                                   placeholder="Ex: BR, US, FR"
                                   maxlength="3"
                                   style="text-transform: uppercase;"
                                   required />
                            <small class="form-text text-muted">Código de 2 letras (ISO 3166-1)</small>
                        </div>
                        <div class="col-md-4">
                            <label for="CityName" class="form-label">
                                <span style="margin-right: 0.25rem;">🏙️</span>Nome da Cidade
                            </label>
                            <input name="CityName"
                                   id="CityName"
                                   class="form-control"
                                   placeholder="Ex: São Paulo, New York"
                                   required />
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">&nbsp;</label>
                            <div class="d-flex gap-2">
                                <button type="button" class="btn btn-outline-info flex-fill" onclick="checkCityExists()">
                                    <span id="checkSpinner" class="spinner-border spinner-border-sm d-none" role="status"></span>
                                    <span style="margin-right: 0.5rem;">🔍</span>Verificar
                                </button>
                                <button type="submit" class="btn btn-primary flex-fill" id="addButton" disabled>
                                    <span style="margin-right: 0.5rem;">⭐</span>Favoritar
                                </button>
                            </div>
                        </div>
                    </div>
                    <div id="cityCheckResult" class="mt-3"></div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Lista de cidades favoritas -->
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="card-title">
                    <span style="margin-right: 0.5rem;">📍</span>Suas Cidades Favoritas
                </h5>
                <span class="badge bg-primary" style="font-size: 0.875rem;">@Model.FavoriteCities.Count cidade(s)</span>
            </div>
            <div class="card-body">
                @if (!Model.FavoriteCities.Any())
                {
                    <div class="text-center py-5">
                        <div class="mb-4" style="font-size: 4rem; opacity: 0.5;">🌍</div>
                        <h4 class="mb-3">Nenhuma cidade favorita ainda</h4>
                        <p class="text-muted mb-4">Adicione sua primeira cidade favorita usando o formulário acima!</p>
                        <button type="button" class="btn btn-outline-primary" onclick="document.getElementById('CityName').focus()">
                            <span style="margin-right: 0.5rem;">🚀</span>Adicionar Primeira Cidade
                        </button>
                    </div>
                }
                else
                {
                    <div class="row g-4">
                        @foreach (var cityViewModel in Model.FavoriteCities)
                        {
                            <div class="col-md-6 col-lg-4">
                                <div class="card h-100 border-0 shadow-sm" style="background: linear-gradient(135deg, #fafafa 0%, #f5f5f5 100%);">
                                    <div class="card-header border-0 d-flex justify-content-between align-items-center" style="background: transparent;">
                                        <h6 class="mb-0 fw-semibold">
                                            @if (cityViewModel.Country?.Flag != null)
                                            {
                                                <span class="me-2">
                                                    <img src="@cityViewModel.Country.Flag" style="height: 20px" />
                                                </span>
                                            }
                                            @cityViewModel.FavoriteCity.CityName
                                        </h6>
                                        <span class="badge bg-light text-dark">@cityViewModel.FavoriteCity.CountryCode</span>
                                    </div>
                                    <div class="card-body">
                                        @if (cityViewModel.Weather != null)
                                        {
                                            <div class="text-center mb-3">
                                                <h2 class="text-primary mb-1" style="font-weight: 700;">@Math.Round(cityViewModel.Weather.Temperature, 1)°C</h2>
                                                <p class="text-muted mb-1">@cityViewModel.Weather.Description</p>
                                                <small class="text-muted">Sensação: @Math.Round(cityViewModel.Weather.FeelsLike, 1)°C</small>
                                            </div>
                                            <div class="row text-center g-2">
                                                <div class="col-6">
                                                    <div class="p-2 rounded" style="background-color: rgba(33, 150, 243, 0.1);">
                                                        <small class="text-muted d-block">💧 Umidade</small>
                                                        <strong class="text-primary">@cityViewModel.Weather.Humidity%</strong>
                                                    </div>
                                                </div>
                                                <div class="col-6">
                                                    <div class="p-2 rounded" style="background-color: rgba(76, 175, 80, 0.1);">
                                                        <small class="text-muted d-block">🌪️ Vento</small>
                                                        <strong class="text-success">@Math.Round(cityViewModel.Weather.WindSpeed, 1) km/h</strong>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="text-center text-muted py-3">
                                                <div class="spinner-border spinner-border-sm mb-2" role="status"></div>
                                                <p class="mb-0">Carregando dados climáticos...</p>
                                            </div>
                                        }
                                    </div>
                                    <div class="card-footer border-0" style="background: transparent;">
                                        <div class="d-flex justify-content-between gap-2 mb-2">
                                            <a asp-action="Details" asp-route-locationId="@cityViewModel.FavoriteCity.LocationId"
                                               class="btn btn-outline-primary btn-sm flex-fill">
                                                <span style="margin-right: 0.25rem;">👁️</span>Visualizar
                                            </a>
                                            <form asp-action="RemoveFavorite" method="post" class="d-inline flex-fill"
                                                  onsubmit="return confirm('Tem certeza que deseja remover esta cidade dos favoritos?')">
                                                <input type="hidden" name="locationId" value="@cityViewModel.FavoriteCity.LocationId" />
                                                <button type="submit" class="btn btn-outline-danger btn-sm w-100">
                                                    <span style="margin-right: 0.25rem;">🗑️</span>Remover
                                                </button>
                                            </form>
                                        </div>
                                        <small class="text-muted">
                                            <span style="margin-right: 0.25rem;">📅</span>Adicionada em: @cityViewModel.FavoriteCity.CreatedAt.ToString("dd/MM/yyyy HH:mm")
                                        </small>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        let cityExists = false;

        // Converter código do país para maiúsculo automaticamente
        document.getElementById('CountryCode').addEventListener('input', function (e) {
            e.target.value = e.target.value.toUpperCase();
            resetCityCheck();
        });

        document.getElementById('CityName').addEventListener('input', function (e) {
            resetCityCheck();
        });

        function resetCityCheck() {
            cityExists = false;
            document.getElementById('addButton').disabled = true;
            document.getElementById('cityCheckResult').innerHTML = '';
        }

        async function checkCityExists() {
            const countryCode = document.getElementById('CountryCode').value.trim();
            const cityName = document.getElementById('CityName').value.trim();
            const resultDiv = document.getElementById('cityCheckResult');
            const spinner = document.getElementById('checkSpinner');
            const addButton = document.getElementById('addButton');

            if (!countryCode || !cityName) {
                resultDiv.innerHTML = '<div class="alert alert-warning"><span style="margin-right: 0.5rem;">⚠️</span>Por favor, preencha ambos os campos.</div>';
                return;
            }

            if (countryCode.length !== 2) {
                resultDiv.innerHTML = '<div class="alert alert-warning"><span style="margin-right: 0.5rem;">⚠️</span>O código do país deve ter exatamente 2 caracteres.</div>';
                return;
            }

            spinner.classList.remove('d-none');
            resultDiv.innerHTML = '';
            addButton.disabled = true;

            try {
                const response = await fetch('@Url.Action("CheckCityExists", "FavoriteCities")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({
                        countryCode: countryCode,
                        cityName: cityName
                    })
                });

                const data = await response.json();

                if (data.exists) {
                    resultDiv.innerHTML = `
                                <div class="alert alert-success">
                                    <span style="margin-right: 0.5rem;">✅</span><strong>${data.message}</strong><br>
                                    A cidade foi encontrada e pode ser adicionada aos favoritos.
                                </div>
                            `;
                    cityExists = true;
                    addButton.disabled = false;
                } else {
                    resultDiv.innerHTML = `
                                <div class="alert alert-danger">
                                    <span style="margin-right: 0.5rem;">❌</span><strong>${data.message}</strong><br>
                                    Verifique se o nome da cidade e código do país estão corretos.
                                </div>
                            `;
                    cityExists = false;
                    addButton.disabled = true;
                }
            } catch (error) {
                resultDiv.innerHTML = `
                            <div class="alert alert-danger">
                                <span style="margin-right: 0.5rem;">❌</span><strong>Erro:</strong> ${error.message}
                            </div>
                        `;
                cityExists = false;
                addButton.disabled = true;
            } finally {
                spinner.classList.add('d-none');
            }
        }

        // Validação antes do submit
        document.getElementById('addFavoriteForm').addEventListener('submit', function (e) {
            const countryCode = document.getElementById('CountryCode').value.trim();
            const cityName = document.getElementById('CityName').value.trim();

            if (!cityExists) {
                e.preventDefault();
                alert('⚠️ Por favor, verifique se a cidade existe antes de adicionar aos favoritos.');
                return false;
            }

            if (!countryCode || !cityName) {
                e.preventDefault();
                alert('⚠️ Por favor, preencha todos os campos obrigatórios.');
                return false;
            }

            if (countryCode.length < 2 || countryCode.length > 3) {
                e.preventDefault();
                alert('⚠️ O código do país deve ter 2 ou 3 caracteres.');
                return false;
            }
        });
    </script>
}
